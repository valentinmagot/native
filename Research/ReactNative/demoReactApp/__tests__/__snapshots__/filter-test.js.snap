// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "white",
      "borderBottomWidth": 1,
      "borderColor": "black",
      "flexDirection": "row",
      "padding": 5,
    }
  }
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "marginHorizontal": 2,
      }
    }
  >
    <Text
      adjustFontSizeToFit={true}
      allowFontScaling={false}
      numberOfLines={1}
      style={Object {}}
    >
      All
    </Text>
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F5FCFF",
              "justifyContent": "center",
              "padding": 0,
              "width": 750,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#CCCFD6",
                  "borderBottomWidth": 0,
                  "borderColor": "#CCCFD6",
                  "borderTopColor": "lightgrey",
                  "borderTopWidth": 0.5,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "padding": 0,
                  "width": 750,
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#006BFF",
                      "padding": 8,
                    },
                    undefined,
                    Object {
                      "textAlign": "left",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#006BFF",
                      "padding": 8,
                    },
                    undefined,
                    Object {
                      "textAlign": "right",
                    },
                  ]
                }
              >
                Done
              </Text>
            </View>
          </View>
          <View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "width": 750,
                  },
                  undefined,
                ]
              }
            >
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "All",
                      "textColor": undefined,
                      "value": 0,
                    },
                    Object {
                      "label": "Ascending",
                      "textColor": undefined,
                      "value": 1,
                    },
                    Object {
                      "label": "Descending",
                      "textColor": undefined,
                      "value": 2,
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;
